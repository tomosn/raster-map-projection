/*!
 * RasterMapProjection v0.0.23  2018-11-18
 *   https://github.com/tomosn/raster-map-projection
 * Copyright (C) 2016-2018 T.Seno
 * All rights reserved. 
 * @license GPL v3 License (http://www.gnu.org/licenses/gpl.html)
 */

"use strict";if("undefined"!=typeof module&&module.exports)var ProjMath=require("./rasterproj-common.js");RasterMapProjection.createProjection=function(r,o,t){return new ProjTMERC(r,o)},RasterMapProjection.createShaderProgram=function(r){return new TMERCProjShaderProgram(r)};var TMERCProjShaderProgram=function(r){ProjShaderProgram.call(this,r),this.locUnifBaseY_=null};Object.setPrototypeOf(TMERCProjShaderProgram.prototype,ProjShaderProgram.prototype),TMERCProjShaderProgram.prototype.init=function(r,o){var t=ProjShaderProgram.prototype.init.call(this,r,o);return t&&(this.locUnifBaseY_=this.gl_.getUniformLocation(this.program_,"uBaseY")),t},TMERCProjShaderProgram.prototype.renderLatitudeLine=function(r,o,t){var e=0,a=0;t&&(e=this.getPeriodIndexY_(t[1]),a=this.getPeriodIndexY_(t[3]));var i=(o[0]+o[o.length-1])/2,n=0;0<i?n=Math.PI/2:i<0&&(n=-Math.PI/2);for(var h=e;h<=a;++h)this.gl_.uniform1f(this.locUnifBaseY_,2*Math.PI*h+n),ProjShaderProgram.prototype.renderLatitudeLine.call(this,r,o)},TMERCProjShaderProgram.prototype.renderLongitudeLine=function(r,o,t){var e=0,a=0;t&&(e=this.getPeriodIndexY_(t[1]),a=this.getPeriodIndexY_(t[3]));for(var i=e;i<=a;++i)this.gl_.uniform1f(this.locUnifBaseY_,2*Math.PI*i+0),ProjShaderProgram.prototype.renderLongitudeLine.call(this,r,o)},TMERCProjShaderProgram.prototype.getPeriodIndexY_=function(r){return Math.floor((r+Math.PI)/(2*Math.PI))};var ProjTMERC=function(r,o){this.lam0=r,this.phi0=o};ProjTMERC.RANGE_RECTANGLE=[-Math.PI,-Math.PI,+Math.PI,+Math.PI],ProjTMERC.prototype.getRange=function(){return ProjTMERC.RANGE_RECTANGLE.slice(0)},ProjTMERC.prototype.getProjCenter=function(){return{lambda:this.lam0,phi:this.phi0}},ProjTMERC.prototype.setProjCenter=function(r,o){this.lam0=r,this.phi0=o},ProjTMERC.prototype.checkXYDomain=function(r,o,t){return!0},ProjTMERC.prototype.forward=function(r,o){var t=Math.cos(o)*Math.sin(r-this.lam0),e=Math.log((1+t)/(1-t))/2,a=Math.atan2(Math.tan(o),Math.cos(r-this.lam0))-this.phi0;return(a<-Math.PI||Math.PI<=a)&&(a-=2*Math.PI*Math.floor((a+Math.PI)/(2*Math.PI))),{x:e,y:a}},ProjTMERC.prototype.inverse=function(r,o){var t=this.inverse_phi_(r,o),e=this.inverse_lambda_(r,o);return(e<-Math.PI||Math.PI<=e)&&(e-=2*Math.PI*Math.floor((e+Math.PI)/(2*Math.PI))),{lambda:e,phi:t}},ProjTMERC.prototype.inverse_phi_=function(r,o){return Math.asin(ProjMath.clamp(Math.sin(o+this.phi0)/Math.cosh(r),-1,1))},ProjTMERC.prototype.inverse_lambda_=function(r,o){return Math.atan2(Math.sinh(r),Math.cos(o+this.phi0))+this.lam0},ProjTMERC.prototype.inverse_lambda_atY_=function(r,o){var t=Math.cos(o+this.phi0);if(0===t)return 0<=r?Math.PI/2:-Math.PI/2;var e=Math.sinh(r),a=Math.atan2(e,t)+this.lam0;return t<0&&e<0?a+2*Math.PI:a},ProjTMERC.prototype.containsNorthPole_=function(r,o,t,e){if(t<0||0<r)return!1;for(var a=(2*Math.floor((o+this.phi0)/(2*Math.PI)-.5)+.5)*Math.PI-this.phi0,i=0;i<256;++i){var n=a+2*Math.PI*i;if(e<n)break;if(o<=n&&n<=e)return!0}return!1},ProjTMERC.prototype.containsSouthPole_=function(r,o,t,e){if(t<0||0<r)return!1;for(var a=(2*Math.floor((o+this.phi0)/(2*Math.PI)+.5)-.5)*Math.PI-this.phi0,i=0;i<256;++i){var n=a+2*Math.PI*i;if(e<n)break;if(o<=n&&n<=e)return!0}return!1},ProjTMERC.prototype.inverseBoundingBox=function(r,o,t,e){var a=r<=t?r:t,i=r<=t?t:r,n=o<=e?o:e,h=o<=e?e:o;if(a<=0&&0<=i){var s=this.containsNorthPole_(a,n,i,h),u=this.containsSouthPole_(a,n,i,h);if(s&&u)return{lambda:[-Math.PI,+Math.PI],phi:[-Math.PI/2,+Math.PI/2]};if(s||u){var l=this.inversePhiRange_([a,i],[n,h]);return s?{lambda:[-Math.PI,+Math.PI],phi:[l[0],Math.PI/2]}:{lambda:[-Math.PI,+Math.PI],phi:[-Math.PI/2,l[1]]}}}var p=this.inversePhiRange_([a,i],[n,h]),P=this.inverseLambdaRange_([a,i],[n,h]);return P=this.normalizeLambdaRange_(P),2*Math.PI<P[1]-P[0]&&(P=[-Math.PI,Math.PI]),{lambda:P,phi:p}},ProjTMERC.prototype.mergeRange_=function(r,o){var t=null;return null==r?t=o:null!=o&&(t=r,o[0]<t[0]&&(t[0]=o[0]),t[1]<o[1]&&(t[1]=o[1])),t},ProjTMERC.prototype.normalizeLambdaRange_=function(r){var o=r[0];if(-Math.PI<=o&&o<Math.PI)return r;var t=2*Math.PI*Math.floor((o+Math.PI)/(2*Math.PI));return[r[0]-t,r[1]-t]},ProjTMERC.prototype.inverseLambdaRange_=function(r,o){var t=r[0]<=r[1]?r[0]:r[1],e=r[0]<=r[1]?r[1]:r[0],a=o[0]<=o[1]?o[0]:o[1],i=o[0]<=o[1]?o[1]:o[0],n=this.inverseLambdaRangeAtY_([t,e],[a,i]),h=this.inverseLambdaRangeAtX_([a,i],[t,e]);return this.mergeRange_(h,n)},ProjTMERC.prototype.inverseLambdaRangeAtY_=function(r,o){for(var t=r[0]<=r[1]?r[0]:r[1],e=r[0]<=r[1]?r[1]:r[0],a=t<=0&&0<=e,i=o.length,n=null,h=null,s=0;s<i;s++){var u=o[s],l=a?this.inverse_lambda_atY_(t,u):this.inverse_lambda_(t,u);(null===n||l<n)&&(n=l),(null===h||h<l)&&(h=l),(l=a?this.inverse_lambda_atY_(e,u):this.inverse_lambda_(e,u))<n&&(n=l),h<l&&(h=l)}if(n<-Math.PI||Math.PI<=n){var p=2*Math.PI*Math.floor((n+Math.PI)/(2*Math.PI));n-=p,h-=p}return[n,h]},ProjTMERC.prototype.inverseLambdaRangeAtX_=function(r,o){for(var t=r[0]<=r[1]?r[0]:r[1],e=r[0]<=r[1]?r[1]:r[0],a=Math.PI*Math.floor((t+this.phi0)/Math.PI)-this.phi0,i=o.length,n=null,h=null,s=0;s<i;s++){var u=o[s],l=this.inverse_lambda_(u,t);(null===n||l<n)&&(n=l),(null===h||h<l)&&(h=l),(l=this.inverse_lambda_(u,e))<n&&(n=l),h<l&&(h=l);for(var p=1;p<=2;p++){var P=a+Math.PI*p;if(e<P)break;(l=this.inverse_lambda_(u,P))<n&&(n=l),h<l&&(h=l)}}if(n<-Math.PI||Math.PI<=n){var f=2*Math.PI*Math.floor((n+Math.PI)/(2*Math.PI));n-=f,h-=f}return[n,h]},ProjTMERC.prototype.inversePhiRange_=function(r,o){var t=r[0]<=r[1]?r[0]:r[1],e=r[0]<=r[1]?r[1]:r[0],a=o[0]<=o[1]?o[0]:o[1],i=o[0]<=o[1]?o[1]:o[0],n=this.inversePhiRangeAtY_([t,e],[a,i]),h=this.inversePhiRangeAtX_([a,i],[t,e]);return this.mergeRange_(h,n)},ProjTMERC.prototype.inversePhiRangeAtY_=function(r,o){for(var t=r[0]<=r[1]?r[0]:r[1],e=r[0]<=r[1]?r[1]:r[0],a=o.length,i=null,n=null,h=0;h<a;h++){var s=o[h],u=this.inverse_phi_(t,s);(null===i||u<i)&&(i=u),(null===n||n<u)&&(n=u),(u=this.inverse_phi_(e,s))<i&&(i=u),n<u&&(n=u),t<0&&0<e&&((u=this.inverse_phi_(0,s))<i&&(i=u),n<u&&(n=u))}return[i,n]},ProjTMERC.prototype.inversePhiRangeAtX_=function(r,o){for(var t=r[0]<=r[1]?r[0]:r[1],e=r[0]<=r[1]?r[1]:r[0],a=Math.PI*(Math.floor((t+this.phi0)/Math.PI+.5)-.5)-this.phi0,i=o.length,n=null,h=null,s=0;s<i;s++){var u=o[s],l=this.inverse_phi_(u,t);(null===n||l<n)&&(n=l),(null===h||h<l)&&(h=l),(l=this.inverse_phi_(u,e))<n&&(n=l),h<l&&(h=l);for(var p=1;p<=2;p++){var P=a+Math.PI*p;if(e<P)break;(l=this.inverse_phi_(u,P))<n&&(n=l),h<l&&(h=l)}}return[n,h]},ProjTMERC.prototype.getVertexShaderStr=function(){return ProjTMERC.VERTEX_SHADER_STR},ProjTMERC.prototype.getFragmentShaderStr=function(){return ProjTMERC.FRAGMENT_SHADER_STR},ProjTMERC.VERTEX_SHADER_STR=["precision highp float;","attribute float aCoordX;","attribute float aCoordY;","uniform mat3 uFwdTransform;","uniform vec2 uProjCenter;","varying vec2 vCoord;","varying float vInRange;","uniform float uBaseY;","uniform float uPointSize;","uniform lowp int uCoordType;","uniform lowp int uTextureType;","const float pi = 3.141592653589793;","const float epsilon = 0.001;","vec2 proj_forward(vec2 center, vec2 lp, float baseY)","{","  float b = cos(lp.y) * sin(lp.x - center.x);","  float x = log((1.0 + b) / (1.0 - b)) / 2.0;","  float y = atan(tan(lp.y), cos(lp.x - center.x));","  float dy = y - baseY + pi;","  if ( dy < 0.0 || 2.0*pi <= dy ) {","    y = y - 2.0*pi * floor(dy / (2.0*pi));","  }","  return vec2(x, y - center.y);","}","float check_xy_range(vec2 xy)","{","  return step(-pi, xy.x) - step(pi, xy.x);","}","void main()","{","  vInRange = 1.0;","  vec3 pos;","  if ( uTextureType == 2 || uCoordType == 2 ) {","    pos = vec3(aCoordX, aCoordY, 1.0);","  } else if ( uCoordType == 1 ) {","    pos = uFwdTransform * vec3(aCoordX, aCoordY, 1.0);","    vInRange = check_xy_range(vec2(aCoordX, aCoordY));","  } else {","    vec2 xy = proj_forward(uProjCenter, vec2(aCoordX, aCoordY), uBaseY);","    vInRange = check_xy_range(xy);","    pos = uFwdTransform * vec3(xy.x, xy.y, 1.0);","  }","  vCoord = pos.xy;","  gl_Position = vec4(pos, 1.0);","  gl_PointSize = uPointSize;","}"].join("\n"),ProjTMERC.FRAGMENT_SHADER_STR=["precision highp float;","uniform mat3 uInvTransform;","uniform vec2 uDataCoord1;","uniform vec2 uDataCoord2;","uniform vec2 uClipCoord1;","uniform vec2 uClipCoord2;","uniform lowp int uCoordType;","uniform lowp int uTextureType;","uniform sampler2D uTexture;","uniform vec2 uProjCenter;","uniform vec4 uColor;","uniform float uOpacity;","varying vec2 vCoord;","varying float vInRange;","const float pi = 3.141592653589793;","const float epsilon = 0.00000001;","const float xyRadius = pi;","vec2 proj_inverse(vec2 center, vec2 xy)","{","  float d = xy.y + center.y;","  float ep = exp(xy.x);","  float em = exp(-xy.x);","  float ch = (ep + em) / 2.0;","  float sh = (ep - em) / 2.0;","  float phi = asin( clamp( sin(d) / ch, -1.0, 1.0 ) );","  float lam = mod( center.x + atan( sh, cos(d) ) + pi, 2.0 * pi ) - pi;","  return vec2(lam, phi);","}","float inner_xy(vec2 xy)","{","  return 1.0;","}","void main()","{","  if ( vInRange < 0.5 ) {","    discard;","    return;","  }","  vec4 outColor;","  bool isDiscard = false;","  if ( uTextureType == 2 ) {","    float inXY = 1.0;","    vec2 coord;","    if ( uCoordType == 2 ) {","      coord = vCoord;","    } else {","      vec3 viewCoord = uInvTransform * vec3(vCoord.x, vCoord.y, 1.0);","      inXY = inner_xy(viewCoord.xy);","      if ( 0.0 < inXY ) {","        if ( uCoordType == 1 ) {","          coord = viewCoord.xy;","        } else if ( uCoordType == 0 ) {","          coord = proj_inverse(uProjCenter, viewCoord.xy);","        }","      } else {","        isDiscard = true;","        coord = vec2(0.0, 0.0);","      }","    }","    if ( !isDiscard ) {","      vec2 ts = (coord - uDataCoord1) / (uDataCoord2 - uDataCoord1);","      if ( uClipCoord1.x <= ts.x && uClipCoord1.y <= ts.y && ts.x <= uClipCoord2.x && ts.y <= uClipCoord2.y) {","        outColor = texture2D(uTexture, vec2(ts.x, 1.0 - ts.y)) * inXY;","        outColor.a = outColor.a * uOpacity;","      } else {","        isDiscard = true;","      }","    }","  } else if ( uTextureType == 1 ) {","    outColor = texture2D(uTexture, gl_PointCoord);","    isDiscard = (outColor.a == 0.0);","  } else {","    outColor = uColor;","    isDiscard = (outColor.a == 0.0);","  }","  if ( isDiscard ) {","    discard;","  } else {","    gl_FragColor = outColor;","  }","}"].join("\n"),"undefined"!=typeof module&&module.exports&&(module.exports=ProjTMERC);