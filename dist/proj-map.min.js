/*!
 * Raster Map Projection v0.0.21  2017-11-05
 *   https://github.com/tomosn/raster-map-projection
 * Copyright (C) 2016-2017 T.Seno
 * All rights reserved. 
 * @license GPL v3 License (http://www.gnu.org/licenses/gpl.html)
 */

"use strict";if("undefined"!=typeof module&&module.exports)var ProjMath=require("./rasterproj-common.js");var TileManager=function(i){this.rootNumX=2,this.rootNumY=1,this.rootTileSizeX=Math.PI,this.rootTileSizeY=Math.PI,this.numLevels=1,this.inverseY=!1,this.tileOrigin=[-Math.PI,-Math.PI/2],this.tileDomain=[-Math.PI,-Math.PI/2,+Math.PI,+Math.PI/2],this.dataLevelDef=null,this.tileUrlDef=null,void 0!==i&&("rootNumX"in i&&(this.rootNumX=i.rootNumX),"rootNumY"in i&&(this.rootNumY=i.rootNumY),"rootTileSizeX"in i&&(this.rootTileSizeX=i.rootTileSizeX),"rootTileSizeY"in i&&(this.rootTileSizeY=i.rootTileSizeY),"numLevels"in i&&(this.numLevels=i.numLevels),"inverseY"in i&&(this.inverseY=i.inverseY),"tileOrigin"in i&&(this.tileOrigin=i.tileOrigin),"dataLevelDef"in i&&(this.dataLevelDef=i.dataLevelDef),"tileUrlDef"in i&&(this.tileUrlDef=i.tileUrlDef))};TileManager.prototype.getTileX_=function(i,t){return Math.floor(i*(t-this.tileOrigin[0])/this.rootTileSizeX)},TileManager.prototype.getTileY_=function(i,t){var e=this.inverseY?-1:1;return Math.floor(e*i*(t-this.tileOrigin[1])/this.rootTileSizeY)},TileManager.prototype.getTileNumX_=function(i){return Math.ceil(i*(this.tileDomain[2]-this.tileOrigin[0])/this.rootTileSizeX)},TileManager.prototype.getTileNumY_=function(i){var t=this.inverseY?-1:1,e=this.inverseY?this.tileDomain[1]:this.tileDomain[3];return Math.ceil(t*i*(e-this.tileOrigin[1])/this.rootTileSizeY)},TileManager.prototype.getScale_=function(i){return 1<<Math.round(ProjMath.clamp(i,0,this.numLevels-1))},TileManager.prototype.getTileInfos=function(i,t){var e,r,o=this.getScale_(t),n=this.getTileNumX_(o),a=this.getTileX_(o,i.lambda[0]),s=this.getTileX_(o,i.lambda[1]),h=this.getTileNumY_(o);this.inverseY?(e=this.getTileY_(o,i.phi[1]),r=this.getTileY_(o,i.phi[0])):(e=this.getTileY_(o,i.phi[0]),r=this.getTileY_(o,i.phi[1]));for(var l=[],d=h+1,p=e;p<=r;++p){var c=p%h;if(d==c)break;c<d&&(d=c);for(var u=n+1,g=a;g<=s;++g){var y=g%n;if(u==y)break;y<u&&(u=y);var m,v,f=this.tileUrlDef(t,y,c),_=this.rootTileSizeX*y/o+this.tileOrigin[0],w=this.rootTileSizeX*(y+1)/o+this.tileOrigin[0];this.inverseY?(m=-this.rootTileSizeY*(c+1)/o+this.tileOrigin[1],v=-this.rootTileSizeY*c/o+this.tileOrigin[1]):(m=this.rootTileSizeY*c/o+this.tileOrigin[1],v=this.rootTileSizeY*(c+1)/o+this.tileOrigin[1]);var T=null;(_<this.tileDomain[0]||m<this.tileDomain[1]||this.tileDomain[2]<w||this.tileDomain[3]<v)&&(T=[0,0,1,1],_<this.tileDomain[0]&&(T[0]=(this.tileDomain[0]-_)/(w-_)),m<this.tileDomain[1]&&(T[1]=(this.tileDomain[1]-m)/(v-m)),this.tileDomain[2]<w&&(T[2]=(this.tileDomain[2]-_)/(w-_)),this.tileDomain[3]<v&&(T[3]=(this.tileDomain[3]-m)/(v-m))),l.push({url:f,rect:[_,m,w,v],clipRect:T})}}return l};var ImageCache=function(i,t){this.num=32,this.crossOrigin=null,this.textures={},this.loading={},this.ongoingImageLoads=[],this.observer_=i,void 0!==t&&("num"in t&&(this.num=t.num),"crossOrigin"in t&&(this.crossOrigin=t.crossOrigin))};ImageCache.prototype.loadImage_=function(i,t,e){this.loading[t]=!0;var r=new Image;null!=this.crossOrigin&&(r.crossOrigin=this.crossOrigin),r.onload=function(){this.ongoingImageLoads.splice(this.ongoingImageLoads.indexOf(r),1);var o=ImageUtils.createTexture(i,r);o&&(this.textures[t]=[o,e]),delete this.loading.url,this.observer_.call(this)}.bind(this),this.ongoingImageLoads.push(r),r.src=t},ImageCache.prototype.loadImageIfAbsent=function(i,t,e){return!(t in this.textures)&&(!(t in this.loading)&&(this.loadImage_(i,t,e),!0))},ImageCache.prototype.getTexture=function(i){return this.textures[i]},ImageCache.prototype.clearOngoingImageLoads=function(){for(var i=0;i<this.ongoingImageLoads.length;i++)this.ongoingImageLoads[i].onload=void 0;this.ongoingImageLoads=[]};var CoordTransform=function(i,t){this.src_x1_=i[0],this.src_y1_=i[1],this.src_x2_=i[2],this.src_y2_=i[3],this.dst_x1_=t[0],this.dst_y1_=t[1],this.dst_x2_=t[2],this.dst_y2_=t[3],this.scaleX_=(t[2]-t[0])/(i[2]-i[0]),this.scaleY_=(t[3]-t[1])/(i[3]-i[1])};CoordTransform.prototype.scaleX=function(){return this.scaleX_},CoordTransform.prototype.scaleY=function(){return this.scaleY_},CoordTransform.prototype.forwardPoint=function(i){return[this.dst_x1_+(i[0]-this.src_x1_)*this.scaleX_,this.dst_y1_+(i[1]-this.src_y1_)*this.scaleY_]},CoordTransform.prototype.forwardRect=function(i){var t=this.forwardPoint([i[0],i[1]]),e=this.forwardPoint([i[2],i[3]]);return[t[0],t[1],e[0],e[1]]};var ViewWindowManager=function(i,t,e){this.canvasSize={width:t.width,height:t.height},this.viewRect_=i,this.zoomInLimit_=null,this.zoomOutLimit_=null,void 0!==e&&("zoomInLimit"in e&&(this.zoomInLimit_=e.zoomInLimit),"zoomOutLimit"in e&&(this.zoomOutLimit_=e.zoomOutLimit)),this.rect=this.getViewRect()};ViewWindowManager.prototype.setCanvasSize=function(i,t){this.canvasSize.width=i,this.canvasSize.height=t},ViewWindowManager.prototype.getCanvasSize=function(){return{width:this.canvasSize.width,height:this.canvasSize.height}},ViewWindowManager.prototype.getViewRect=function(){return this.viewRect_.slice(0)},ViewWindowManager.prototype.setViewWindow=function(i,t,e,r){this.rect=[i,t,e,r]},ViewWindowManager.prototype.getViewWindow=function(){return this.rect.slice(0)},ViewWindowManager.prototype.setViewWindowCenter=function(i,t){var e=(this.rect[2]-this.rect[0])/2,r=(this.rect[3]-this.rect[1])/2;this.rect=[i-e,t-r,i+e,t+r]},ViewWindowManager.prototype.getViewWindowCenter=function(){return[(this.rect[2]+this.rect[0])/2,(this.rect[3]+this.rect[1])/2]},ViewWindowManager.prototype.moveWindow=function(i,t){var e=-i*(this.rect[2]-this.rect[0])/this.canvasSize.width,r=t*(this.rect[3]-this.rect[1])/this.canvasSize.height,o=this.rect[0]+e,n=this.rect[1]+r,a=this.rect[2]+e,s=this.rect[3]+r;this.rect=[o,n,a,s]},ViewWindowManager.prototype.zoomWindow=function(i){var t=(this.canvasSize.height-i)/this.canvasSize.height,e=t*(this.rect[2]-this.rect[0])/2,r=t*(this.rect[3]-this.rect[1])/2,o=(this.rect[2]+this.rect[0])/2,n=(this.rect[3]+this.rect[1])/2;null!=this.zoomInLimit_&&(e<this.zoomInLimit_||r<this.zoomInLimit_)||null!=this.zoomOutLimit_&&(this.zoomOutLimit_<e||this.zoomOutLimit_<r)||(this.rect=[o-e,n-r,o+e,n+r])},ViewWindowManager.prototype.getViewPointFromWindow=function(i,t){return new CoordTransform([0,this.canvasSize.height,this.canvasSize.width,0],this.rect).forwardPoint([i,t])};var MapView=function(i,t,e,r,o){this.gl=i,this.projection=t,this.imageProj=RasterMapProjection.createShaderProgram(i),this.imageProj.init(t.getVertexShaderStr(),t.getFragmentShaderStr());var n={zoomInLimit:Math.PI/20,zoomOutLimit:20*Math.PI},a=this.projection.getRange();this.viewWindowManager_=new ViewWindowManager(a,e,n),this.layers_=[],this.nameToLayers_={},this.isValid_=!1};MapView.prototype.setProjCenter=function(i,t){this.projection.setProjCenter(i,t),this.imageProj.setProjCenter(i,t),this.invalidateLayers(),this.invalidate()},MapView.prototype.getProjCenter=function(){return this.projection.getProjCenter()},MapView.prototype.getViewRect=function(){return this.viewWindowManager_.getViewRect()},MapView.prototype.getWindow=function(){return this.viewWindowManager_.getViewWindow()},MapView.prototype.setWindow=function(i,t,e,r){this.viewWindowManager_.setViewWindow(i,t,e,r),this.invalidateLayers(),this.invalidate()},MapView.prototype.moveWindow=function(i,t){this.viewWindowManager_.moveWindow(i,t),this.invalidate()},MapView.prototype.zoomWindow=function(i){this.viewWindowManager_.zoomWindow(i),this.invalidate()},MapView.prototype.getViewCenterPoint=function(){return this.viewWindowManager_.getViewWindowCenter()},MapView.prototype.setViewCenterPoint=function(i,t){this.viewWindowManager_.setViewWindowCenter(i,t),this.invalidate()},MapView.prototype.getLambdaPhiPointFromWindow=function(i,t){var e=this.viewWindowManager_.getViewPointFromWindow(i,t);return this.projection.inverse(e[0],e[1])},MapView.prototype.getViewPointFromWindow=function(i,t){return this.viewWindowManager_.getViewPointFromWindow(i,t)},MapView.prototype.invalidate=function(){this.isValid_=!1},MapView.prototype.invalidateLayers=function(){for(var i=0;i<this.layers_.length;++i)this.layers_[i].invalidate()},MapView.prototype.loadData=function(){for(var i=0;i<this.layers_.length;++i)this.layers_[i].loadData(this);this.invalidate()},MapView.prototype.createTexture=function(i){return ImageUtils.createTexture(this.gl,i)},MapView.prototype.addLayer=function(i){this.layers_.push(i),this.nameToLayers_[i.layerId]=i,this.invalidate()},MapView.prototype.clearLayers=function(){this.layers_.splice(0,this.layers_.length),this.nameToLayers_={},this.invalidate()},MapView.prototype.getLayerById=function(i){return this.nameToLayers_[i]},MapView.prototype.render=function(i){if(!0===i)for(var t=0;t<this.layers_.length;++t)this.layers_[t].markInvalid();else if(!this.requireRender_())return!1;this.imageProj.clear(this.viewWindowManager_.canvasSize);var e=this.projection.getProjCenter();this.imageProj.setProjCenter(e.lambda,e.phi);var r=this.viewWindowManager_.getViewWindow();this.imageProj.setViewWindow(r[0],r[1],r[2],r[3]);for(var o=0;o<this.layers_.length;++o)this.layers_[o].visibility?this.layers_[o].render(this):this.layers_[o].markValid();return this.isValid_=!0,!0},MapView.prototype.requireRender_=function(){if(!this.isValid_)return!0;for(var i=0;i<this.layers_.length;++i)if(!this.layers_[i].isValid())return!0;return!1};var Layer=function(i,t){this.layerId=i,this.coordType=t,this.visibility=!0,this.isValid_=!1};Layer.prototype.isValid=function(){return this.isValid_},Layer.prototype.markInvalid=function(){this.isValid_=!1},Layer.prototype.markValid=function(){this.isValid_=!0},Layer.prototype.loadData=function(i){},Layer.prototype.invalidate=function(){this.markInvalid()},Layer.prototype.setVisibility=function(i){this.visibility=i,this.markInvalid()},Layer.prototype.render=function(i){this.markValid()};var TileTextureLayer=function(i,t,e,r,o){Layer.call(this,i,t),this.tileManager=new TileManager(r),this.prevTileInfos_=null,this.prevWindow_=null;this.imageCache=new ImageCache(function(){this.markInvalid()}.bind(this),o),this.opacity=1,void 0!==e&&"opacity"in e&&(this.opacity=e.opacity)};Object.setPrototypeOf(TileTextureLayer.prototype,Layer.prototype),TileTextureLayer.prototype.invalidate=function(){this.clearTileInfoCache_(),this.markInvalid()},TileTextureLayer.prototype.loadData=function(i){if(null==this.tileManager.tileUrlDef)return-1;var t=this.getTileInfos_(i),e=this.requestImages_(i.gl,t);return this.markInvalid(),e},TileTextureLayer.prototype.setTileUrlDef=function(i){this.tileManager.tileUrlDef=i,this.markInvalid()},TileTextureLayer.prototype.setDataLevelDef=function(i){this.tileManager.dataLevelDef=i,this.markInvalid()},TileTextureLayer.prototype.resetImages=function(){this.imageCache.clearOngoingImageLoads(),this.markInvalid()},TileTextureLayer.prototype.render=function(i){if(null!=this.tileManager.tileUrlDef){var t=this.getTileInfos_(i);this.requestImages_(i.gl,t);for(var e=[],r=0;r<t.length;++r){var o=t[r],n=this.imageCache.getTexture(o.url);n&&(n.push(o.clipRect),e.push(n))}if(0<e.length){i.imageProj.setCoordTypeData(),i.imageProj.setOpacity(this.opacity),i.imageProj.prepareRenderSurface();for(var a=0;a<e.length;a++){var s=e[a][0],h=e[a][1],l=e[a][2];i.imageProj.renderSurfaceTexture(s,h,l)}}this.markValid()}},TileTextureLayer.prototype.clearTileInfoCache_=function(){this.prevWindow_=null,this.prevTileInfos_=null,this.markInvalid()},TileTextureLayer.prototype.requestImages_=function(i,t){for(var e=0,r=0;r<t.length;++r)this.imageCache.loadImageIfAbsent(i,t[r].url,t[r].rect)&&++e;return e},TileTextureLayer.prototype.getTileInfos_=function(i){var t=i.viewWindowManager_.getViewWindow();if(null!=this.prevTileInfos_&&null!=this.prevWindow_){if(t[0]==this.prevWindow_[0]&&t[1]==this.prevWindow_[1]&&t[2]==this.prevWindow_[2]&&t[3]==this.prevWindow_[3])return this.prevTileInfos_;this.prevTileInfos_=null,this.prevWindow_=null}var e=i.projection.inverseBoundingBox(t[0],t[1],t[2],t[3]),r=null!=this.tileManager.dataLevelDef?this.tileManager.dataLevelDef(t,e):0,o=this.tileManager.getTileInfos(e,r);return this.prevWindow_=t,this.prevTileInfos_=o,o};var PointTextureLayer=function(i,t,e,r){Layer.call(this,i,t),this.pointTextureId=e,this.size=48,void 0!==r&&"size"in r&&(this.size=r.size),this.data_=[]};Object.setPrototypeOf(PointTextureLayer.prototype,Layer.prototype),PointTextureLayer.prototype.addPoint=function(i,t){this.data_.push(i,t),this.markInvalid()},PointTextureLayer.prototype.addPoints=function(i){this.data_=this.data_.concat(i),this.markInvalid()},PointTextureLayer.prototype.clear=function(){this.data_.splice(0,this.data_.length),this.markInvalid()},PointTextureLayer.prototype.render=function(i){0<this.data_.length&&(i.imageProj.prepareRenderPoints(),i.imageProj.setCoordType(this.coordType),i.imageProj.setPointSize(this.size),i.imageProj.setPointTexture(this.pointTextureId),i.imageProj.renderPoints(this.data_)),this.markValid()};var PolylineLayer=function(i,t,e){Layer.call(this,i,t),this.color={r:1,g:1,b:1,a:1},void 0!==e&&"color"in e&&(this.color=e.color),this.data_=[]};Object.setPrototypeOf(PolylineLayer.prototype,Layer.prototype),PolylineLayer.prototype.addPolyline=function(i){this.data_.push(i),this.markInvalid()},PolylineLayer.prototype.clear=function(){this.data_.splice(0,this.data_.length),this.markInvalid()},PolylineLayer.prototype.render=function(i){if(0<this.data_.length){i.imageProj.prepareRenderPolyline(),i.imageProj.setCoordType(this.coordType),i.imageProj.setColor(this.color);for(var t=0;t<this.data_.length;++t)i.imageProj.renderPolyline(this.data_[t])}this.markValid()};var GraticuleLayer=function(i,t){Layer.call(this,i,ProjShaderProgram.COORD_TYPE_DATA),this.graticuleRenderer_=null,this.color={r:.88,g:.88,b:.88,a:1},this.intervalDegrees=20,void 0!==t&&("color"in t&&(this.color=t.color),"intervalDegrees"in t&&(this.intervalDegrees=t.intervalDegrees))};Object.setPrototypeOf(GraticuleLayer.prototype,Layer.prototype),GraticuleLayer.prototype.invalidate=function(){this.graticuleRenderer_=null,this.markInvalid()},GraticuleLayer.prototype.render=function(i){if(0<this.intervalDegrees){null==this.graticuleRenderer_&&(this.graticuleRenderer_=new GraticuleRenderer(i.imageProj,i.projection)),i.imageProj.setCoordTypeData(),i.imageProj.setColor(this.color);var t=i.getWindow(),e=i.projection.inverseBoundingBox(t[0],t[1],t[2],t[3]);this.graticuleRenderer_.renderLines(t,e,this.intervalDegrees)}this.markValid()},"undefined"!=typeof module&&module.exports&&(module.exports=MapView,module.exports.TileManager=TileManager);