/*!
 * RasterMapProjection v0.0.29  2019-06-02
 *   https://github.com/tomosn/raster-map-projection
 *   A JavaScript library for on-the-fly map projection of raster tiles using WebGL.
 * Copyright (C) 2016-2019 T.Seno
 * All rights reserved. 
 * @license GPL v3 License (http://www.gnu.org/licenses/gpl.html)
 */

"use strict";function RasterMapProjection(){}function ImageUtils(){}function MathUtils(){}function ProjMath(){}function RangeUtils(){}function RectangleUtils(){}function LambdaRangeUtils(){}function GeographicRectUtils(){}function ProjShaderProgram(t){this.gl_=t,this.vbo_=null,this.program_=null,this.coordsBuffer_=null,this.locAttrCoordX_=null,this.locAttrCoordY_=null,this.locUnifFwdTransform_=null,this.locUnifInvTransform_=null,this.locUnifProjCenter_=null,this.locUnifDataCoord1_=null,this.locUnifDataCoord2_=null,this.locUnifClipCoord1_=null,this.locUnifClipCoord2_=null,this.locUnifPointSize_=null,this.locUnifCoordType_=null,this.locUnifColor_=null,this.locUnifOpacity_=null,this.locUnifTextureType_=null,this.locUnifTexture_=null,this.locUnifCanvasSize_=null,this.locUnifGraticuleIntervalDeg_=null}Math.cosh||(Math.cosh=function(t){return(Math.exp(t)+Math.exp(-t))/2}),Math.sinh||(Math.sinh=function(t){return(Math.exp(t)-Math.exp(-t))/2}),RasterMapProjection.createProjection=function(t,r,i){return null},RasterMapProjection.createShaderProgram=function(t,r){const i=new ProjShaderProgram(t);return i.init(r.getVertexShaderStr(),r.getFragmentShaderStr()),i},ImageUtils.createTexture=function(t,r){const i=t.createTexture();return t.bindTexture(t.TEXTURE_2D,i),t.pixelStorei(t.UNPACK_FLIP_Y_WEBGL,!1),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MIN_FILTER,t.LINEAR),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MAG_FILTER,t.LINEAR),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_S,t.CLAMP_TO_EDGE),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_T,t.CLAMP_TO_EDGE),t.bindTexture(t.TEXTURE_2D,i),t.texImage2D(t.TEXTURE_2D,0,t.RGBA,t.RGBA,t.UNSIGNED_BYTE,r),t.bindTexture(t.TEXTURE_2D,null),i},MathUtils.getTransform=function(t,r){const i=t.x2-t.x1,a=t.y2-t.y1;return[(r.x2-r.x1)/i,0,0,0,(r.y2-r.y1)/a,0,(r.x1*t.x2-t.x1*r.x2)/i,(r.y1*t.y2-t.y1*r.y2)/a,1]},ProjMath.EPSILON=1e-7,ProjMath.SQRT_2=Math.sqrt(2),ProjMath.PI_SQ=Math.PI*Math.PI,ProjMath.HALF_PI=Math.PI/2,ProjMath.clamp=function(t,r,i){return Math.max(r,Math.min(i,t))},ProjMath.atan2Range=function(t,r){const i=r.min,a=r.max,o=t.min,e=t.max;if(0<=o)return 0<i?{min:Math.atan2(o,a),max:Math.atan2(e,i)}:a<0?{min:Math.atan2(e,a),max:Math.atan2(o,i)}:{min:Math.atan2(o,a),max:Math.atan2(o,i)};if(e<0)return 0<i?{min:Math.atan2(o,i),max:Math.atan2(e,a)}:a<0?{min:Math.atan2(e,i),max:Math.atan2(o,a)}:{min:Math.atan2(e,i),max:Math.atan2(e,a)};if(0<i)return{min:Math.atan2(o,i),max:Math.atan2(e,i)};if(a<0){const t=Math.atan2(e,a),r=Math.atan2(o,a);return Math.PI<=t?{min:t-2*Math.PI,max:r}:{min:t,max:r+2*Math.PI}}return{min:-Math.PI,max:Math.PI}},ProjMath.toLambdaPhi=function(t){const r=Math.sqrt(t[0]*t[0]+t[1]*t[1]);return{lambda:Math.atan2(t[1],t[0]),phi:Math.atan2(t[2],r)}},ProjMath.normalizeLambda=function(t){return-Math.PI<=t&&t<Math.PI?t:t-2*Math.PI*Math.floor((t+Math.PI)/(2*Math.PI))},ProjMath.neighborPoint=function(t,r){if(ProjMath.EPSILON<=Math.abs(t.phi-r.phi))return!1;const i=ProjMath.normalizeLambda(t.lambda),a=ProjMath.normalizeLambda(r.lambda);return Math.abs(i-a)<ProjMath.EPSILON},ProjMath.calcAngle=function(t,r,i,a){return Math.atan2(t*a-i*r,t*i+r*a)},RangeUtils.intersects=function(t,r){return(r.min-t.max)*(r.max-t.min)<=0},RangeUtils.unionIfIntersects=function(t,r){if(null===t||null===r)return null;if(!RangeUtils.intersects(t,r))return null;return{min:t.min<r.min?t.min:r.min,max:t.max<r.max?r.max:t.max}},RangeUtils.translate=function(t,r){return{min:t.min+r,max:t.max+r}},RectangleUtils.getSize=function(t){return{width:t.x2-t.x1,height:t.y2-t.y1}},RectangleUtils.getCenter=function(t){return[(t.x1+t.x2)/2,(t.y1+t.y2)/2]},LambdaRangeUtils.isPeriodic=function(t){return 2*Math.PI-ProjMath.EPSILON<=t.max-t.min},LambdaRangeUtils.contains=function(t,r){if(LambdaRangeUtils.isPeriodic(t))return!0;if(t.max-t.min<r.max-r.min)return!1;const i=LambdaRangeUtils.normalize(t),a=LambdaRangeUtils.normalize(r);return i.min<=a.min&&a.max<=i.max||Math.PI<i.max&&a.max<=i.max-2*Math.PI},LambdaRangeUtils.normalize=function(t){if(LambdaRangeUtils.isPeriodic(t))return{min:-Math.PI,max:Math.PI};const r=t.min;if(-Math.PI<=r&&r<Math.PI)return t;const i=2*Math.PI*Math.floor((r+Math.PI)/(2*Math.PI));return{min:t.min-i,max:t.max-i}},GeographicRectUtils.unionIfIntersects=function(t,r){if((r.phi2-t.phi1)*(t.phi2-r.phi1)<0)return null;const i=t.phi1<r.phi1?t.phi1:r.phi1,a=t.phi2<r.phi2?r.phi2:t.phi2,o=LambdaRangeUtils.isPeriodic({min:t.lambda1,max:t.lambda2}),e=LambdaRangeUtils.isPeriodic({min:r.lambda1,max:r.lambda2});if(o||e)return{lambda1:-Math.PI,lambda2:Math.PI,phi1:i,phi2:a};const n=LambdaRangeUtils.normalize({min:t.lambda1,max:t.lambda2}),l=LambdaRangeUtils.normalize({min:r.lambda1,max:r.lambda2}),h=Math.PI<=n.max;if(h===Math.PI<=l.max){if(!RangeUtils.intersects(n,l))return null;const t=n.min<l.min?n.min:l.min,r=n.max<l.max?l.max:n.max;if(h){const o=LambdaRangeUtils.normalize({min:t,max:r});return{lambda1:o.min,lambda2:o.max,phi1:i,phi2:a}}return{lambda1:t,lambda2:r,phi1:i,phi2:a}}if(RangeUtils.intersects(n,l)){return{lambda1:n.min<l.min?n.min:l.min,lambda2:n.max<l.max?l.max:n.max,phi1:i,phi2:a}}if(h){const t=RangeUtils.translate(n,-2*Math.PI);if(!RangeUtils.intersects(t,l))return null;const r=t.min<l.min?t.min:l.min,o=t.max<l.max?l.max:t.max,e=LambdaRangeUtils.normalize({min:r,max:o});return{lambda1:e.min,lambda2:e.max,phi1:i,phi2:a}}{const t=RangeUtils.translate(l,-2*Math.PI);if(!RangeUtils.intersects(n,t))return null;const r=n.min<t.min?n.min:t.min,o=n.max<t.max?t.max:n.max,e=LambdaRangeUtils.normalize({min:r,max:o});return{lambda1:e.min,lambda2:e.max,phi1:i,phi2:a}}},GeographicRectUtils.intersection=function(t,r){const i=t.phi1<r.phi1?r.phi1:t.phi1,a=t.phi2<r.phi2?t.phi2:r.phi2;if(a<=i)return null;const o=LambdaRangeUtils.isPeriodic({min:t.lambda1,max:t.lambda2}),e=LambdaRangeUtils.isPeriodic({min:r.lambda1,max:r.lambda2});if(o&&e)return[{lambda1:-Math.PI,phi1:i,lambda2:+Math.PI,phi2:a}];if(o){const t=LambdaRangeUtils.normalize({min:r.lambda1,max:r.lambda2});return[{lambda1:t.min,phi1:i,lambda2:t.max,phi2:a}]}if(e){const r=LambdaRangeUtils.normalize({min:t.lambda1,max:t.lambda2});return[{lambda1:r.min,phi1:i,lambda2:r.max,phi2:a}]}const n=LambdaRangeUtils.normalize({min:t.lambda1,max:t.lambda2}),l=LambdaRangeUtils.normalize({min:r.lambda1,max:r.lambda2}),h=Math.PI<=n.max,s=Math.PI<=l.max;if(!h&&!s){if(!RangeUtils.intersects(n,l))return null;return[{lambda1:n.min<l.min?l.min:n.min,lambda2:n.max<l.max?n.max:l.max,phi1:i,phi2:a}]}const m=n.max<l.max?n:l,_=n.max<l.max?l:n,g=[];if(RangeUtils.intersects(m,_)){const t=m.min<_.min?_.min:m.min,r=m.max;g.push({lambda1:t,lambda2:r,phi1:i,phi2:a})}const c=RangeUtils.translate(_,-2*Math.PI);if(RangeUtils.intersects(m,c)){const t=m.min,r=m.max<c.max?m.max:c.max;g.push({lambda1:t,lambda2:r,phi1:i,phi2:a})}return 0===g.length?null:g},ProjShaderProgram.COORD_TYPE_DATA=0,ProjShaderProgram.COORD_TYPE_XY=1,ProjShaderProgram.COORD_TYPE_SCREEN=2,ProjShaderProgram.SCREEN_RECT_={x1:-1,y1:-1,x2:1,y2:1},ProjShaderProgram.DIMENSION_=2,ProjShaderProgram.POINTS_BUFFER_SIZE_=64,ProjShaderProgram.TEXTURE_TYPE_NONE_=0,ProjShaderProgram.TEXTURE_TYPE_POINT_=1,ProjShaderProgram.TEXTURE_TYPE_SURFACE_=2,ProjShaderProgram.prototype.getGLContext=function(){return this.gl_},ProjShaderProgram.prototype.setColor=function(t){this.gl_.uniform4f(this.locUnifColor_,t.r,t.g,t.b,t.a)},ProjShaderProgram.prototype.setTransform=function(t,r,i){const a=t[0],o=t[1],e=r.width/2,n=r.height/2,l=Math.cos(i),h=Math.sin(i),s=[l/e,h/n,0,-h/n,l/n,0,-l*a/e+h*o/n,-h*a/e-l*o/n,1],m=[l*e,-h*n,0,h*e,l*n,0,a,o,1];this.gl_.uniformMatrix3fv(this.locUnifFwdTransform_,!1,s),this.gl_.uniformMatrix3fv(this.locUnifInvTransform_,!1,m)},ProjShaderProgram.prototype.setCanvasSize=function(t){this.gl_.uniform2f(this.locUnifCanvasSize_,t.width,t.height)},ProjShaderProgram.prototype.setProjCenter=function(t,r){this.gl_.uniform2f(this.locUnifProjCenter_,t,r)},ProjShaderProgram.prototype.setPointSize=function(t){this.gl_.uniform1f(this.locUnifPointSize_,t)},ProjShaderProgram.prototype.setPointTexture=function(t){null!=t?(this.setTextureType_(ProjShaderProgram.TEXTURE_TYPE_POINT_),this.bindTexture(t)):(this.setTextureType_(ProjShaderProgram.TEXTURE_TYPE_NONE_),this.bindTexture(null))},ProjShaderProgram.prototype.setCoordType=function(t){this.gl_.uniform1i(this.locUnifCoordType_,t)},ProjShaderProgram.prototype.setCoordTypeData=function(){this.gl_.uniform1i(this.locUnifCoordType_,ProjShaderProgram.COORD_TYPE_DATA)},ProjShaderProgram.prototype.setCoordTypeXY=function(){this.gl_.uniform1i(this.locUnifCoordType_,ProjShaderProgram.COORD_TYPE_XY)},ProjShaderProgram.prototype.setCoordTypeScreen=function(){this.gl_.uniform1i(this.locUnifCoordType_,ProjShaderProgram.COORD_TYPE_SCREEN)},ProjShaderProgram.prototype.setClearColor=function(t){this.gl_.clearColor(t.r,t.g,t.b,t.a),this.gl_.enable(this.gl_.BLEND)},ProjShaderProgram.prototype.clear=function(t){this.gl_.clear(this.gl_.COLOR_BUFFER_BIT),this.gl_.viewport(0,0,t.width,t.height)},ProjShaderProgram.prototype.setOpacity=function(t){this.gl_.uniform1f(this.locUnifOpacity_,t)},ProjShaderProgram.prototype.createTexture=function(t){return ImageUtils.createTexture(this.gl_,t)},ProjShaderProgram.prototype.bindTexture=function(t){this.gl_.activeTexture(this.gl_.TEXTURE0),this.gl_.bindTexture(this.gl_.TEXTURE_2D,t)},ProjShaderProgram.prototype.setTextureType_=function(t){this.gl_.uniform1i(this.locUnifTextureType_,t)},ProjShaderProgram.prototype.setGraticuleIntervalDeg=function(t){this.gl_.uniform1f(this.locUnifGraticuleIntervalDeg_,t)},ProjShaderProgram.prototype.disableGraticule_=function(){this.gl_.uniform1f(this.locUnifGraticuleIntervalDeg_,-1)},ProjShaderProgram.prototype.prepareRenderSurface=function(){this.gl_.enableVertexAttribArray(this.locAttrCoordX_),this.gl_.vertexAttribPointer(this.locAttrCoordX_,1,this.gl_.FLOAT,this.gl_.FALSE,8,0),this.gl_.enableVertexAttribArray(this.locAttrCoordY_),this.gl_.vertexAttribPointer(this.locAttrCoordY_,1,this.gl_.FLOAT,this.gl_.FALSE,8,4);const t=new Float32Array([-1,1,-1,-1,1,1,1,-1]);this.gl_.bufferSubData(this.gl_.ARRAY_BUFFER,0,t),this.gl_.activeTexture(this.gl_.TEXTURE0),this.setTextureType_(ProjShaderProgram.TEXTURE_TYPE_SURFACE_),this.bindTexture(null),this.disableGraticule_()},ProjShaderProgram.prototype.prepareRenderPoints=function(){this.gl_.enableVertexAttribArray(this.locAttrCoordX_),this.gl_.vertexAttribPointer(this.locAttrCoordX_,1,this.gl_.FLOAT,this.gl_.FALSE,8,0),this.gl_.enableVertexAttribArray(this.locAttrCoordY_),this.gl_.vertexAttribPointer(this.locAttrCoordY_,1,this.gl_.FLOAT,this.gl_.FALSE,8,4),this.setTextureType_(ProjShaderProgram.TEXTURE_TYPE_NONE_),this.bindTexture(null),this.disableGraticule_()},ProjShaderProgram.prototype.prepareRenderPolyline=function(){this.gl_.enableVertexAttribArray(this.locAttrCoordX_),this.gl_.vertexAttribPointer(this.locAttrCoordX_,1,this.gl_.FLOAT,this.gl_.FALSE,8,0),this.gl_.enableVertexAttribArray(this.locAttrCoordY_),this.gl_.vertexAttribPointer(this.locAttrCoordY_,1,this.gl_.FLOAT,this.gl_.FALSE,8,4),this.setTextureType_(ProjShaderProgram.TEXTURE_TYPE_NONE_),this.bindTexture(null),this.disableGraticule_()},ProjShaderProgram.prototype.prepareRenderGraticule=function(){this.gl_.enableVertexAttribArray(this.locAttrCoordX_),this.gl_.vertexAttribPointer(this.locAttrCoordX_,1,this.gl_.FLOAT,this.gl_.FALSE,8,0),this.gl_.enableVertexAttribArray(this.locAttrCoordY_),this.gl_.vertexAttribPointer(this.locAttrCoordY_,1,this.gl_.FLOAT,this.gl_.FALSE,8,4);const t=new Float32Array([-1,1,-1,-1,1,1,1,-1]);this.gl_.bufferSubData(this.gl_.ARRAY_BUFFER,0,t),this.setTextureType_(ProjShaderProgram.TEXTURE_TYPE_NONE_),this.setCoordTypeScreen(),this.bindTexture(null)},ProjShaderProgram.prototype.renderSurfaceTexture=function(t,r,i){this.gl_.bindTexture(this.gl_.TEXTURE_2D,t),this.gl_.uniform2f(this.locUnifDataCoord1_,r.lambda1,r.phi1),this.gl_.uniform2f(this.locUnifDataCoord2_,r.lambda2,r.phi2),i?(this.gl_.uniform2f(this.locUnifClipCoord1_,i.x1,i.y1),this.gl_.uniform2f(this.locUnifClipCoord2_,i.x2,i.y2)):(this.gl_.uniform2f(this.locUnifClipCoord1_,0,0),this.gl_.uniform2f(this.locUnifClipCoord2_,1,1)),this.gl_.drawArrays(this.gl_.TRIANGLE_STRIP,0,4)},ProjShaderProgram.prototype.renderPolyline=function(t){if(t.length/2<=ProjShaderProgram.POINTS_BUFFER_SIZE_)this.gl_.bufferSubData(this.gl_.ARRAY_BUFFER,0,new Float32Array(t)),this.gl_.drawArrays(this.gl_.LINE_STRIP,0,t.length/2);else{let r=0,i=0;do{i=r+2*ProjShaderProgram.POINTS_BUFFER_SIZE_,t.length<i&&(i=t.length);const a=t.slice(r,i);this.gl_.bufferSubData(this.gl_.ARRAY_BUFFER,0,new Float32Array(a)),this.gl_.drawArrays(this.gl_.LINE_STRIP,0,a.length/2),r=i-2}while(i<t.length)}},ProjShaderProgram.prototype.renderPoints=function(t){if(t.length/2<=ProjShaderProgram.POINTS_BUFFER_SIZE_)this.gl_.bufferSubData(this.gl_.ARRAY_BUFFER,0,new Float32Array(t)),this.gl_.drawArrays(this.gl_.POINTS,0,t.length/2);else{let r=0,i=0;do{i=r+2*ProjShaderProgram.POINTS_BUFFER_SIZE_,t.length<i&&(i=t.length);const a=t.slice(r,i);this.gl_.bufferSubData(this.gl_.ARRAY_BUFFER,0,new Float32Array(a)),this.gl_.drawArrays(this.gl_.POINTS,0,a.length/2),r=i}while(i<t.length)}},ProjShaderProgram.prototype.renderGraticule=function(t){this.gl_.uniform1f(this.locUnifGraticuleIntervalDeg_,t),this.gl_.drawArrays(this.gl_.TRIANGLE_STRIP,0,4)},ProjShaderProgram.prototype.init=function(t,r){const i=this.loadShader_(this.gl_.VERTEX_SHADER,t),a=this.loadShader_(this.gl_.FRAGMENT_SHADER,r),o=this.gl_.createProgram();if(this.gl_.attachShader(o,i),this.gl_.attachShader(o,a),this.gl_.linkProgram(o),!this.gl_.getProgramParameter(o,this.gl_.LINK_STATUS)&&!this.gl_.isContextLost()){const t=this.gl_.getProgramInfoLog(o);return alert("Error linking program:\n"+t),this.gl_.deleteProgram(o),!1}return this.program_=o,this.gl_.useProgram(this.program_),this.locAttrCoordX_=this.gl_.getAttribLocation(this.program_,"aCoordX"),this.locAttrCoordY_=this.gl_.getAttribLocation(this.program_,"aCoordY"),this.locUnifFwdTransform_=this.gl_.getUniformLocation(this.program_,"uFwdTransform"),this.locUnifInvTransform_=this.gl_.getUniformLocation(this.program_,"uInvTransform"),this.locUnifProjCenter_=this.gl_.getUniformLocation(this.program_,"uProjCenter"),this.locUnifDataCoord1_=this.gl_.getUniformLocation(this.program_,"uDataCoord1"),this.locUnifDataCoord2_=this.gl_.getUniformLocation(this.program_,"uDataCoord2"),this.locUnifClipCoord1_=this.gl_.getUniformLocation(this.program_,"uClipCoord1"),this.locUnifClipCoord2_=this.gl_.getUniformLocation(this.program_,"uClipCoord2"),this.locUnifPointSize_=this.gl_.getUniformLocation(this.program_,"uPointSize"),this.locUnifCoordType_=this.gl_.getUniformLocation(this.program_,"uCoordType"),this.locUnifColor_=this.gl_.getUniformLocation(this.program_,"uColor"),this.locUnifOpacity_=this.gl_.getUniformLocation(this.program_,"uOpacity"),this.locUnifTextureType_=this.gl_.getUniformLocation(this.program_,"uTextureType"),this.locUnifTexture_=this.gl_.getUniformLocation(this.program_,"uTexture"),this.locUnifCanvasSize_=this.gl_.getUniformLocation(this.program_,"uCanvasSize"),this.locUnifGraticuleIntervalDeg_=this.gl_.getUniformLocation(this.program_,"uGraticuleIntervalDeg"),this.coordsBuffer_=this.createBuffer_(ProjShaderProgram.DIMENSION_,ProjShaderProgram.POINTS_BUFFER_SIZE_),this.gl_.bindBuffer(this.gl_.ARRAY_BUFFER,this.coordsBuffer_.buffer),this.setClearColor({r:0,g:.1,b:0,a:1}),this.setOpacity(1),this.gl_.blendFunc(this.gl_.SRC_ALPHA,this.gl_.ONE_MINUS_SRC_ALPHA),!0},ProjShaderProgram.prototype.loadShader_=function(t,r){const i=this.gl_.createShader(t);if(this.gl_.shaderSource(i,r),this.gl_.compileShader(i),!this.gl_.getShaderParameter(i,this.gl_.COMPILE_STATUS)&&!this.gl_.isContextLost()){const t=this.gl_.getShaderInfoLog(i);return alert("Error compiling shader:\n"+t),this.gl_.deleteShader(i),null}return i},ProjShaderProgram.prototype.createBuffer_=function(t,r){const i=this.gl_.createBuffer();return this.gl_.bindBuffer(this.gl_.ARRAY_BUFFER,i),this.gl_.bufferData(this.gl_.ARRAY_BUFFER,r*t*4,this.gl_.DYNAMIC_DRAW),{buffer:i,dimension:t,maxNum:r}},"undefined"!=typeof module&&module.exports&&(module.exports={RasterMapProjection:RasterMapProjection,ImageUtils:ImageUtils,MathUtils:MathUtils,RangeUtils:RangeUtils,LambdaRangeUtils:LambdaRangeUtils,GeographicRectUtils:GeographicRectUtils,ProjMath:ProjMath,ProjShaderProgram:ProjShaderProgram});