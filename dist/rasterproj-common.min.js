/*!
 * RasterMapProjection v0.0.27  2019-02-10
 *   https://github.com/tomosn/raster-map-projection
 *   A JavaScript library for on-the-fly map projection of raster tiles using WebGL.
 * Copyright (C) 2016-2019 T.Seno
 * All rights reserved. 
 * @license GPL v3 License (http://www.gnu.org/licenses/gpl.html)
 */

"use strict";function RasterMapProjection(){}function ImageUtils(){}function MathUtils(){}function ProjMath(){}function RangeUtils(){}function LambdaRangeUtils(){}function GeographicRectUtils(){}function ProjShaderProgram(t){this.gl_=t,this.vbo_=null,this.program_=null,this.coordsBuffer_=null,this.locAttrCoordX_=null,this.locAttrCoordY_=null,this.locUnifFwdTransform_=null,this.locUnifInvTransform_=null,this.locUnifProjCenter_=null,this.locUnifDataCoord1_=null,this.locUnifDataCoord2_=null,this.locUnifClipCoord1_=null,this.locUnifClipCoord2_=null,this.locUnifPointSize_=null,this.locUnifCoordType_=null,this.locUnifColor_=null,this.locUnifOpacity_=null,this.locUnifTextureType_=null,this.locUnifTexture_=null,this.locUnifCanvasSize_=null,this.locUnifGraticuleIntervalDeg_=null}Math.cosh||(Math.cosh=function(t){return(Math.exp(t)+Math.exp(-t))/2}),Math.sinh||(Math.sinh=function(t){return(Math.exp(t)-Math.exp(-t))/2}),RasterMapProjection.createProjection=function(t,r,i){return null},RasterMapProjection.createShaderProgram=function(t,r){const i=new ProjShaderProgram(t);return i.init(r.getVertexShaderStr(),r.getFragmentShaderStr()),i},ImageUtils.createTexture=function(t,r){const i=t.createTexture();return t.bindTexture(t.TEXTURE_2D,i),t.pixelStorei(t.UNPACK_FLIP_Y_WEBGL,!1),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MIN_FILTER,t.LINEAR),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MAG_FILTER,t.LINEAR),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_S,t.CLAMP_TO_EDGE),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_T,t.CLAMP_TO_EDGE),t.bindTexture(t.TEXTURE_2D,i),t.texImage2D(t.TEXTURE_2D,0,t.RGBA,t.RGBA,t.UNSIGNED_BYTE,r),t.bindTexture(t.TEXTURE_2D,null),i},MathUtils.getTransform=function(t,r){const i=t.x2-t.x1,o=t.y2-t.y1;return[(r.x2-r.x1)/i,0,0,0,(r.y2-r.y1)/o,0,(r.x1*t.x2-t.x1*r.x2)/i,(r.y1*t.y2-t.y1*r.y2)/o,1]},ProjMath.EPSILON=1e-7,ProjMath.SQRT_2=Math.sqrt(2),ProjMath.PI_SQ=Math.PI*Math.PI,ProjMath.HALF_PI=Math.PI/2,ProjMath.clamp=function(t,r,i){return Math.max(r,Math.min(i,t))},ProjMath.atan2Range=function(t,r){const i=r.min,o=r.max,e=t.min,a=t.max;if(0<=e)return 0<i?{min:Math.atan2(e,o),max:Math.atan2(a,i)}:o<0?{min:Math.atan2(a,o),max:Math.atan2(e,i)}:{min:Math.atan2(e,o),max:Math.atan2(e,i)};if(a<0)return 0<i?{min:Math.atan2(e,i),max:Math.atan2(a,o)}:o<0?{min:Math.atan2(a,i),max:Math.atan2(e,o)}:{min:Math.atan2(a,i),max:Math.atan2(a,o)};if(0<i)return{min:Math.atan2(e,i),max:Math.atan2(a,i)};if(o<0){const t=Math.atan2(a,o),r=Math.atan2(e,o);return Math.PI<=t?{min:t-2*Math.PI,max:r}:{min:t,max:r+2*Math.PI}}return{min:-Math.PI,max:Math.PI}},ProjMath.toLambdaPhi=function(t){const r=Math.sqrt(t[0]*t[0]+t[1]*t[1]);return{lambda:Math.atan2(t[1],t[0]),phi:Math.atan2(t[2],r)}},ProjMath.normalizeLambda=function(t){return-Math.PI<=t&&t<Math.PI?t:t-2*Math.PI*Math.floor((t+Math.PI)/(2*Math.PI))},ProjMath.neighborPoint=function(t,r){if(ProjMath.EPSILON<=Math.abs(t.phi-r.phi))return!1;const i=ProjMath.normalizeLambda(t.lambda),o=ProjMath.normalizeLambda(r.lambda);return Math.abs(i-o)<ProjMath.EPSILON},ProjMath.calcAngle=function(t,r,i,o){return Math.atan2(t*o-i*r,t*i+r*o)},RangeUtils.intersects_=function(t,r){return(r[0]-t[1])*(r[1]-t[0])<=0},RangeUtils.unionIfIntersects=function(t,r){if(null===t||null===r)return null;if(!RangeUtils.intersects_(t,r))return null;return[t[0]<r[0]?t[0]:r[0],t[1]<r[1]?r[1]:t[1]]},LambdaRangeUtils.isPeriodic=function(t){return 2*Math.PI-ProjMath.EPSILON<=t[1]-t[0]},LambdaRangeUtils.contains=function(t,r){if(LambdaRangeUtils.isPeriodic(t))return!0;if(t[1]-t[0]<r[1]-r[0])return!1;const i=LambdaRangeUtils.normalize(t),o=LambdaRangeUtils.normalize(r);return i[0]<=o[0]&&o[1]<=i[1]||Math.PI<i[1]&&o[1]<=i[1]-2*Math.PI},LambdaRangeUtils.normalize=function(t){if(LambdaRangeUtils.isPeriodic(t))return[-Math.PI,Math.PI];const r=t[0];if(-Math.PI<=r&&r<Math.PI)return t;const i=2*Math.PI*Math.floor((r+Math.PI)/(2*Math.PI));return[t[0]-i,t[1]-i]},GeographicRectUtils.mergeRange_=function(t,r){let i=null;return null==t?i=r:null!=r&&(i=t,r[0]<i[0]&&(i[0]=r[0]),i[1]<r[1]&&(i[1]=r[1])),i},GeographicRectUtils.union=function(t,r){const i=GeographicRectUtils.mergeRange_(t.phi,r.phi),o=LambdaRangeUtils.normalize(t.lambda),e=LambdaRangeUtils.normalize(r.lambda),a=GeographicRectUtils.mergeRange_(o,e);return{lambda:LambdaRangeUtils.normalize(a),phi:i}},GeographicRectUtils.intersection=function(t,r){const i=t.phi[0]<r.phi[0]?r.phi[0]:t.phi[0],o=t.phi[1]<r.phi[1]?t.phi[1]:r.phi[1];if(o<=i)return null;let e=null;const a=LambdaRangeUtils.isPeriodic(t.lambda),n=LambdaRangeUtils.isPeriodic(r.lambda);if(a&&n)e=[-Math.PI,Math.PI];else{const i=LambdaRangeUtils.normalize(t.lambda),o=LambdaRangeUtils.normalize(r.lambda);if(a)e=o;else if(n)e=i;else{const t=i[0]<o[0]?o[0]:i[0],r=i[1]<o[1]?i[1]:o[1];if(t<r)e=[t,r];else{const t=i[1]<o[1]?o[1]:i[1];if(Math.PI<t){const r=i[0]<o[0]?i[0]:o[0];r<t-2*Math.PI&&(e=[r,t-2*Math.PI])}if(null===e)return null}}}return{lambda:e,phi:[i,o]}},ProjShaderProgram.SCREEN_RECT={x1:-1,y1:-1,x2:1,y2:1},ProjShaderProgram.DIMENSION=2,ProjShaderProgram.POINTS_BUFFER_SIZE=64,ProjShaderProgram.COORD_TYPE_DATA=0,ProjShaderProgram.COORD_TYPE_XY=1,ProjShaderProgram.COORD_TYPE_SCREEN=2,ProjShaderProgram.TEXTURE_TYPE_NONE=0,ProjShaderProgram.TEXTURE_TYPE_POINT=1,ProjShaderProgram.TEXTURE_TYPE_SURFACE=2,ProjShaderProgram.prototype.getGLContext=function(){return this.gl_},ProjShaderProgram.prototype.setColor=function(t){this.gl_.uniform4f(this.locUnifColor_,t.r,t.g,t.b,t.a)},ProjShaderProgram.prototype.setTransform=function(t,r,i,o,e){const a=i/2,n=o/2,l=Math.cos(e),h=Math.sin(e),s=[l/a,h/n,0,-h/n,l/n,0,-l*t/a+h*r/n,-h*t/a-l*r/n,1],_=[l*a,-h*n,0,h*a,l*n,0,t,r,1];this.gl_.uniformMatrix3fv(this.locUnifFwdTransform_,!1,s),this.gl_.uniformMatrix3fv(this.locUnifInvTransform_,!1,_)},ProjShaderProgram.prototype.setCanvasSize=function(t,r){this.gl_.uniform2f(this.locUnifCanvasSize_,t,r)},ProjShaderProgram.prototype.setProjCenter=function(t,r){this.gl_.uniform2f(this.locUnifProjCenter_,t,r)},ProjShaderProgram.prototype.setPointSize=function(t){this.gl_.uniform1f(this.locUnifPointSize_,t)},ProjShaderProgram.prototype.setPointTexture=function(t){null!=t?(this.setTextureType_(ProjShaderProgram.TEXTURE_TYPE_POINT),this.bindTexture(t)):(this.setTextureType_(ProjShaderProgram.TEXTURE_TYPE_NONE),this.bindTexture(null))},ProjShaderProgram.prototype.setCoordType=function(t){this.gl_.uniform1i(this.locUnifCoordType_,t)},ProjShaderProgram.prototype.setCoordTypeData=function(){this.gl_.uniform1i(this.locUnifCoordType_,ProjShaderProgram.COORD_TYPE_DATA)},ProjShaderProgram.prototype.setCoordTypeXY=function(){this.gl_.uniform1i(this.locUnifCoordType_,ProjShaderProgram.COORD_TYPE_XY)},ProjShaderProgram.prototype.setCoordTypeScreen=function(){this.gl_.uniform1i(this.locUnifCoordType_,ProjShaderProgram.COORD_TYPE_SCREEN)},ProjShaderProgram.prototype.setClearColor=function(t){this.gl_.clearColor(t.r,t.g,t.b,t.a),this.gl_.enable(this.gl_.BLEND)},ProjShaderProgram.prototype.clear=function(t){this.gl_.clear(this.gl_.COLOR_BUFFER_BIT),this.gl_.viewport(0,0,t.width,t.height)},ProjShaderProgram.prototype.setOpacity=function(t){this.gl_.uniform1f(this.locUnifOpacity_,t)},ProjShaderProgram.prototype.createTexture=function(t){return ImageUtils.createTexture(this.gl_,t)},ProjShaderProgram.prototype.bindTexture=function(t){this.gl_.activeTexture(this.gl_.TEXTURE0),this.gl_.bindTexture(this.gl_.TEXTURE_2D,t)},ProjShaderProgram.prototype.setTextureType_=function(t){this.gl_.uniform1i(this.locUnifTextureType_,t)},ProjShaderProgram.prototype.setGraticuleIntervalDeg=function(t){this.gl_.uniform1f(this.locUnifGraticuleIntervalDeg_,t)},ProjShaderProgram.prototype.disableGraticule_=function(){this.gl_.uniform1f(this.locUnifGraticuleIntervalDeg_,-1)},ProjShaderProgram.prototype.prepareRenderSurface=function(){this.gl_.enableVertexAttribArray(this.locAttrCoordX_),this.gl_.vertexAttribPointer(this.locAttrCoordX_,1,this.gl_.FLOAT,this.gl_.FALSE,8,0),this.gl_.enableVertexAttribArray(this.locAttrCoordY_),this.gl_.vertexAttribPointer(this.locAttrCoordY_,1,this.gl_.FLOAT,this.gl_.FALSE,8,4);const t=new Float32Array([-1,1,-1,-1,1,1,1,-1]);this.gl_.bufferSubData(this.gl_.ARRAY_BUFFER,0,t),this.gl_.activeTexture(this.gl_.TEXTURE0),this.setTextureType_(ProjShaderProgram.TEXTURE_TYPE_SURFACE),this.bindTexture(null),this.disableGraticule_()},ProjShaderProgram.prototype.prepareRenderPoints=function(){this.gl_.enableVertexAttribArray(this.locAttrCoordX_),this.gl_.vertexAttribPointer(this.locAttrCoordX_,1,this.gl_.FLOAT,this.gl_.FALSE,8,0),this.gl_.enableVertexAttribArray(this.locAttrCoordY_),this.gl_.vertexAttribPointer(this.locAttrCoordY_,1,this.gl_.FLOAT,this.gl_.FALSE,8,4),this.setTextureType_(ProjShaderProgram.TEXTURE_TYPE_NONE),this.bindTexture(null),this.disableGraticule_()},ProjShaderProgram.prototype.prepareRenderPolyline=function(){this.gl_.enableVertexAttribArray(this.locAttrCoordX_),this.gl_.vertexAttribPointer(this.locAttrCoordX_,1,this.gl_.FLOAT,this.gl_.FALSE,8,0),this.gl_.enableVertexAttribArray(this.locAttrCoordY_),this.gl_.vertexAttribPointer(this.locAttrCoordY_,1,this.gl_.FLOAT,this.gl_.FALSE,8,4),this.setTextureType_(ProjShaderProgram.TEXTURE_TYPE_NONE),this.bindTexture(null),this.disableGraticule_()},ProjShaderProgram.prototype.prepareRenderGraticule=function(){this.gl_.enableVertexAttribArray(this.locAttrCoordX_),this.gl_.vertexAttribPointer(this.locAttrCoordX_,1,this.gl_.FLOAT,this.gl_.FALSE,8,0),this.gl_.enableVertexAttribArray(this.locAttrCoordY_),this.gl_.vertexAttribPointer(this.locAttrCoordY_,1,this.gl_.FLOAT,this.gl_.FALSE,8,4);const t=new Float32Array([-1,1,-1,-1,1,1,1,-1]);this.gl_.bufferSubData(this.gl_.ARRAY_BUFFER,0,t),this.setTextureType_(ProjShaderProgram.TEXTURE_TYPE_NONE),this.setCoordTypeScreen(),this.bindTexture(null)},ProjShaderProgram.prototype.renderSurfaceTexture=function(t,r,i){this.gl_.bindTexture(this.gl_.TEXTURE_2D,t),this.gl_.uniform2f(this.locUnifDataCoord1_,r[0],r[1]),this.gl_.uniform2f(this.locUnifDataCoord2_,r[2],r[3]),i?(this.gl_.uniform2f(this.locUnifClipCoord1_,i[0],i[1]),this.gl_.uniform2f(this.locUnifClipCoord2_,i[2],i[3])):(this.gl_.uniform2f(this.locUnifClipCoord1_,0,0),this.gl_.uniform2f(this.locUnifClipCoord2_,1,1)),this.gl_.drawArrays(this.gl_.TRIANGLE_STRIP,0,4)},ProjShaderProgram.prototype.renderPolyline=function(t){if(t.length/2<=ProjShaderProgram.POINTS_BUFFER_SIZE)this.gl_.bufferSubData(this.gl_.ARRAY_BUFFER,0,new Float32Array(t)),this.gl_.drawArrays(this.gl_.LINE_STRIP,0,t.length/2);else{let r=0,i=0;do{i=r+2*ProjShaderProgram.POINTS_BUFFER_SIZE,t.length<i&&(i=t.length);const o=t.slice(r,i);this.gl_.bufferSubData(this.gl_.ARRAY_BUFFER,0,new Float32Array(o)),this.gl_.drawArrays(this.gl_.LINE_STRIP,0,o.length/2),r=i-2}while(i<t.length)}},ProjShaderProgram.prototype.renderPoints=function(t){if(t.length/2<=ProjShaderProgram.POINTS_BUFFER_SIZE)this.gl_.bufferSubData(this.gl_.ARRAY_BUFFER,0,new Float32Array(t)),this.gl_.drawArrays(this.gl_.POINTS,0,t.length/2);else{let r=0,i=0;do{i=r+2*ProjShaderProgram.POINTS_BUFFER_SIZE,t.length<i&&(i=t.length);const o=t.slice(r,i);this.gl_.bufferSubData(this.gl_.ARRAY_BUFFER,0,new Float32Array(o)),this.gl_.drawArrays(this.gl_.POINTS,0,o.length/2),r=i}while(i<t.length)}},ProjShaderProgram.prototype.renderGraticule=function(t){this.gl_.uniform1f(this.locUnifGraticuleIntervalDeg_,t),this.gl_.drawArrays(this.gl_.TRIANGLE_STRIP,0,4)},ProjShaderProgram.prototype.init=function(t,r){const i=this.loadShader_(this.gl_.VERTEX_SHADER,t),o=this.loadShader_(this.gl_.FRAGMENT_SHADER,r),e=this.gl_.createProgram();if(this.gl_.attachShader(e,i),this.gl_.attachShader(e,o),this.gl_.linkProgram(e),!this.gl_.getProgramParameter(e,this.gl_.LINK_STATUS)&&!this.gl_.isContextLost()){const t=this.gl_.getProgramInfoLog(e);return alert("Error linking program:\n"+t),this.gl_.deleteProgram(e),!1}return this.program_=e,this.gl_.useProgram(this.program_),this.locAttrCoordX_=this.gl_.getAttribLocation(this.program_,"aCoordX"),this.locAttrCoordY_=this.gl_.getAttribLocation(this.program_,"aCoordY"),this.locUnifFwdTransform_=this.gl_.getUniformLocation(this.program_,"uFwdTransform"),this.locUnifInvTransform_=this.gl_.getUniformLocation(this.program_,"uInvTransform"),this.locUnifProjCenter_=this.gl_.getUniformLocation(this.program_,"uProjCenter"),this.locUnifDataCoord1_=this.gl_.getUniformLocation(this.program_,"uDataCoord1"),this.locUnifDataCoord2_=this.gl_.getUniformLocation(this.program_,"uDataCoord2"),this.locUnifClipCoord1_=this.gl_.getUniformLocation(this.program_,"uClipCoord1"),this.locUnifClipCoord2_=this.gl_.getUniformLocation(this.program_,"uClipCoord2"),this.locUnifPointSize_=this.gl_.getUniformLocation(this.program_,"uPointSize"),this.locUnifCoordType_=this.gl_.getUniformLocation(this.program_,"uCoordType"),this.locUnifColor_=this.gl_.getUniformLocation(this.program_,"uColor"),this.locUnifOpacity_=this.gl_.getUniformLocation(this.program_,"uOpacity"),this.locUnifTextureType_=this.gl_.getUniformLocation(this.program_,"uTextureType"),this.locUnifTexture_=this.gl_.getUniformLocation(this.program_,"uTexture"),this.locUnifCanvasSize_=this.gl_.getUniformLocation(this.program_,"uCanvasSize"),this.locUnifGraticuleIntervalDeg_=this.gl_.getUniformLocation(this.program_,"uGraticuleIntervalDeg"),this.coordsBuffer_=this.createBuffer_(ProjShaderProgram.DIMENSION,ProjShaderProgram.POINTS_BUFFER_SIZE),this.gl_.bindBuffer(this.gl_.ARRAY_BUFFER,this.coordsBuffer_.buffer),this.setClearColor({r:0,g:.1,b:0,a:1}),this.setOpacity(1),this.gl_.blendFunc(this.gl_.SRC_ALPHA,this.gl_.ONE_MINUS_SRC_ALPHA),!0},ProjShaderProgram.prototype.loadShader_=function(t,r){const i=this.gl_.createShader(t);if(this.gl_.shaderSource(i,r),this.gl_.compileShader(i),!this.gl_.getShaderParameter(i,this.gl_.COMPILE_STATUS)&&!this.gl_.isContextLost()){const t=this.gl_.getShaderInfoLog(i);return alert("Error compiling shader:\n"+t),this.gl_.deleteShader(i),null}return i},ProjShaderProgram.prototype.createBuffer_=function(t,r){const i=this.gl_.createBuffer();return this.gl_.bindBuffer(this.gl_.ARRAY_BUFFER,i),this.gl_.bufferData(this.gl_.ARRAY_BUFFER,r*t*4,this.gl_.DYNAMIC_DRAW),{buffer:i,dimension:t,maxNum:r}},"undefined"!=typeof module&&module.exports&&(module.exports={RasterMapProjection:RasterMapProjection,ImageUtils:ImageUtils,MathUtils:MathUtils,RangeUtils:RangeUtils,LambdaRangeUtils:LambdaRangeUtils,GeographicRectUtils:GeographicRectUtils,ProjMath:ProjMath,ProjShaderProgram:ProjShaderProgram});